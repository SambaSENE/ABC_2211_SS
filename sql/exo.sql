CREATE TABLE emp (
  empno int PRIMARY KEY,
  ename varchar(50),
  job varchar(50),
  mgr int,
  hiredate date,
  sal decimal(10, 2),
  comm decimal(10, 2),
  deptno int
);


ALTER TABLE emp
ADD CONSTRAINT fk_emp_mgr
FOREIGN KEY (mgr)
REFERENCES emp(empno);

CREATE TABLE dept (
  deptno int PRIMARY KEY,
  dname varchar(50),
  loc varchar(50)
);

/*EXERCICE 1
*/

SELECT ename, job, empno, sal FROM emp;

SELECT ename, job, empno, sal 
FROM emp 
WHERE deptno = 10;

/*EXERCICE 2*/

SELECT ename, job, sal 
FROM emp 
WHERE job = 'MANAGER' AND sal > 2800;
/*EXERCICE 3*/

SELECT ename, job 
FROM emp 
WHERE job = 'MANAGER' AND deptno != 30;

/*EXERCICE 4*/
SELECT ename, job, sal 
FROM emp 
WHERE sal BETWEEN 1200 AND 1400;

/*EXERCICE 5*/
SELECT ename, job, deptno 
FROM emp 
WHERE deptno IN (10, 30) 
ORDER BY ename ASC;

/*EXERCICE 6*/

SELECT ename, job, sal 
FROM emp 
WHERE deptno = 30 
ORDER BY sal ASC;

/*EXERCICE 7*/

SELECT ename, job, sal 
FROM emp 
ORDER BY job ASC, sal DESC;

/*EXERCICE 8*/
SELECT DISTINCT JOB FROM emp;

/*EXERCICE 9*/
SELECT d.DNAME
FROM emp e
JOIN dept d ON e.DEPTNO = d.DEPTNO
WHERE e.ENAME = 'ALLEN';

/*EXERCICE 9*/
SELECT d.DNAME, e.ENAME, e.JOB, e.SAL
FROM emp e
JOIN dept d ON e.DEPTNO = d.DEPTNO
WHERE e.JOB <> 'SALESMAN'
ORDER BY d.DNAME, e.SAL DESC;
/*EXERCICE 10*/
SELECT d.DNAME, e.ENAME, e.JOB, e.SAL, (e.SAL + NVL(e.COMM, 0)) AS "SAL+COMM"
FROM emp e
JOIN dept d ON e.DEPTNO = d.DEPTNO
ORDER BY d.DNAME ASC, e.SAL DESC;
/*EXERCICE 11*/
SELECT ENAME, SAL, COMM, (SAL + NVL(COMM, 0)) AS "SAL+COMM"
FROM emp
WHERE JOB = 'SALESMAN';
/*EXERCICE 12*/
SELECT ENAME, JOB, TO_CHAR(HIREDATE, 'DY DD MON YYYY', 'NLS_DATE_LANGUAGE = FRENCH') AS HIREDATE_FR
FROM emp
WHERE DEPTNO = 20;

/*EXERCICE 13*/
SELECT DEPTNO, MAX(SAL) AS MAX_SALARY
FROM emp
GROUP BY DEPTNO;
/*EXERCICE 14*/

SELECT d.DNAME, e.JOB, COUNT(*) AS NUM_EMPLOYEES, SUM(e.SAL) AS TOTAL_SALARY, AVG(e.SAL) AS AVG_SALARY
FROM emp e
JOIN dept d ON e.DEPTNO = d.DEPTNO
GROUP BY d.DNAME, e.JOB;

/*EXERCICE 15*/

SELECT d.DNAME, e.JOB, COUNT(*) AS NUM_EMPLOYEES, SUM(e.SAL) AS TOTAL_SALARY, AVG(e.SAL) AS AVG_SALARY
FROM emp e
JOIN dept d ON e.DEPTNO = d.DEPTNO
WHERE e.DEPTNO IN (
  SELECT DEPTNO
  FROM emp
  GROUP BY DEPTNO
  HAVING COUNT(*) >= 2
)
GROUP BY d.DNAME, e.JOB;


/*EXERCICE 16*/
SELECT JOB FROM EMP WHERE ENAME = 'JONES';

/*EXERCICE 17*/
SELECT ENAME, SAL
FROM EMP
WHERE SAL > (SELECT AVG(SAL) FROM EMP);

SELECT ENAME, DNAME, SAL
FROM EMP
JOIN DEPT ON EMP.DEPTNO = DEPT.DEPTNO
WHERE JOB = 'MANAGER';


/*EXERCICE 18*/
CREATE TABLE PROJET (
   NUM_PROJ NUMBER(3) PRIMARY KEY,
   NOM_PROJ VARCHAR2(5),
   BUDGET NUMBER(8,2)
);
INSERT INTO PROJET (NUM_PROJ, NOM_PROJ, BUDGET)
VALUES (101, 'ALPHA', 96000);

INSERT INTO PROJET (NUM_PROJ, NOM_PROJ, BUDGET)
VALUES (101, 'ALPHA', 96000);

INSERT INTO PROJET (NUM_PROJ, NOM_PROJ, BUDGET)
VALUES (102, 'BETA', 82000);

INSERT INTO PROJET (NUM_PROJ, NOM_PROJ, BUDGET)
VALUES (103, 'GAMMA', 15000);

ALTER TABLE EMP ADD NUM_PROJ NUMBER(3);

UPDATE EMP
SET NUM_PROJ = 
  CASE 
    WHEN DEPTNO = 30 AND JOB = 'SALESMAN' THEN 101
    ELSE 102
  END;


  REATE VIEW EMPLOYEES_VIEW AS 
SELECT E.ENAME, E.JOB, D.DNAME, P.NOM_PROJ 
FROM EMP E
INNER JOIN DEPT D ON E.DEPTNO = D.DEPTNO
INNER JOIN PROJET P ON E.NUM_PROJ = P.NUM_PROJ;

SELECT * 
FROM EMPLOYEES_VIEW
ORDER BY DNAME, NOM_PROJ;

SELECT M.ENAME AS MANAGER_NAME, P.NOM_PROJ AS PROJECT_NAME
FROM EMP M
INNER JOIN EMP E ON M.EMPNO = E.MGR
INNER JOIN PROJET P ON E.NUM_PROJ = P.NUM_PROJ;

SELECT ename, sal
FROM emp
WHERE sal > (SELECT AVG(sal) FROM emp);


CREATE TABLE PROJET (
    PROJNO INT(3) PRIMARY KEY,
    PROJNAME VARCHAR(5),
    BUDGET INT(10)
);

INSERT INTO PROJET (PROJNO, PROJNAME, BUDGET) VALUES 
    (101, 'ALPHA', 96000), 
    (102, 'BETA', 82000), 
    (103, 'GAMMA', 15000);


ALTER TABLE emp ADD COLUMN projno INT(3);

UPDATE emp SET projno = 
    (CASE WHEN deptno = 30 AND job = 'SALESMAN' THEN 101 
          ELSE 102 
     END);

CREATE VIEW emp_details AS 
SELECT emp.ename, emp.job, dept.dname, projet.projname 
FROM emp 
JOIN dept ON emp.deptno = dept.deptno 
JOIN projet ON emp.projno = projet.projno;

SELECT * 
FROM emp_details 
ORDER BY dname, projname;


SELECT emp.ename, projet.projname 
FROM emp 
JOIN projet ON emp.projno = projet.projno 
WHERE emp.job = 'MANAGER';

SELECT *
FROM emp
WHERE deptno = 20
AND hiredate IN (
    SELECT hiredate
    FROM emp
    WHERE deptno = 30
)



SELECT ename, TO_CHAR(hiredate, 'DAY')
FROM emp


SELECT ename, MONTHS_BETWEEN(SYSDATE, hiredate) AS nb_months
FROM emp



SELECT ename
FROM emp
WHERE ename LIKE '%M%A%'


SELECT ename
FROM emp
WHERE ename LIKE '%A%A%'

SELECT *
FROM emp
WHERE hiredate < ALL (
    SELECT hiredate
    FROM emp
    WHERE deptno = 10
)

SELECT job
FROM emp
GROUP BY job
HAVING AVG(sal) = (
    SELECT MIN(avg_sal)
    FROM (
        SELECT AVG(sal) AS avg_sal
        FROM emp
        GROUP BY job
    )
)

SELECT deptno
FROM emp
GROUP BY deptno
HAVING COUNT(*) = (
    SELECT MAX(count_dept)
    FROM (
        SELECT COUNT(*) AS count_dept
        FROM emp
        GROUP BY deptno
    )
)

SELECT deptno, ROUND(COUNT(*)*100/SUM(COUNT(*)) OVER(), 2) AS pct_emp
FROM emp
GROUP BY deptno
ORDER BY deptno
